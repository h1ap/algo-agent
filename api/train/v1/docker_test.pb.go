// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: train/v1/docker_test.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 停止容器请求
type StopContainerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 容器名称
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopContainerRequest) Reset() {
	*x = StopContainerRequest{}
	mi := &file_train_v1_docker_test_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopContainerRequest) ProtoMessage() {}

func (x *StopContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_train_v1_docker_test_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopContainerRequest.ProtoReflect.Descriptor instead.
func (*StopContainerRequest) Descriptor() ([]byte, []int) {
	return file_train_v1_docker_test_proto_rawDescGZIP(), []int{0}
}

func (x *StopContainerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 停止容器响应
type StopContainerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 操作结果消息
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// 容器ID，如果找到
	ContainerId string `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// 操作是否成功
	Success       bool `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopContainerResponse) Reset() {
	*x = StopContainerResponse{}
	mi := &file_train_v1_docker_test_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopContainerResponse) ProtoMessage() {}

func (x *StopContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_train_v1_docker_test_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopContainerResponse.ProtoReflect.Descriptor instead.
func (*StopContainerResponse) Descriptor() ([]byte, []int) {
	return file_train_v1_docker_test_proto_rawDescGZIP(), []int{1}
}

func (x *StopContainerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StopContainerResponse) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *StopContainerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 查找镜像请求
type FindImageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 镜像名称
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindImageRequest) Reset() {
	*x = FindImageRequest{}
	mi := &file_train_v1_docker_test_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindImageRequest) ProtoMessage() {}

func (x *FindImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_train_v1_docker_test_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindImageRequest.ProtoReflect.Descriptor instead.
func (*FindImageRequest) Descriptor() ([]byte, []int) {
	return file_train_v1_docker_test_proto_rawDescGZIP(), []int{2}
}

func (x *FindImageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 查找镜像响应
type FindImageResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 操作结果消息
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// 镜像ID，如果找到
	ImageId string `protobuf:"bytes,2,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	// 操作是否成功
	Success       bool `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindImageResponse) Reset() {
	*x = FindImageResponse{}
	mi := &file_train_v1_docker_test_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindImageResponse) ProtoMessage() {}

func (x *FindImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_train_v1_docker_test_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindImageResponse.ProtoReflect.Descriptor instead.
func (*FindImageResponse) Descriptor() ([]byte, []int) {
	return file_train_v1_docker_test_proto_rawDescGZIP(), []int{3}
}

func (x *FindImageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FindImageResponse) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *FindImageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_train_v1_docker_test_proto protoreflect.FileDescriptor

const file_train_v1_docker_test_proto_rawDesc = "" +
	"\n" +
	"\x1atrain/v1/docker_test.proto\x12\fapi.train.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x17validate/validate.proto\"3\n" +
	"\x14StopContainerRequest\x12\x1b\n" +
	"\x04name\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x04name\"n\n" +
	"\x15StopContainerResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12!\n" +
	"\fcontainer_id\x18\x02 \x01(\tR\vcontainerId\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\"/\n" +
	"\x10FindImageRequest\x12\x1b\n" +
	"\x04name\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x04name\"b\n" +
	"\x11FindImageResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x19\n" +
	"\bimage_id\x18\x02 \x01(\tR\aimageId\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess2\xec\x01\n" +
	"\x11DockerTestService\x12n\n" +
	"\rStopContainer\x12\".api.train.v1.StopContainerRequest\x1a#.api.train.v1.StopContainerResponse\"\x14\x82\xd3\xe4\x93\x02\x0e\x12\f/docker/stop\x12g\n" +
	"\tFindImage\x12\x1e.api.train.v1.FindImageRequest\x1a\x1f.api.train.v1.FindImageResponse\"\x19\x82\xd3\xe4\x93\x02\x13\x12\x11/docker/findImageB,\n" +
	"\fapi.train.v1P\x01Z\x1aalgo-agent/api/train/v1;v1b\x06proto3"

var (
	file_train_v1_docker_test_proto_rawDescOnce sync.Once
	file_train_v1_docker_test_proto_rawDescData []byte
)

func file_train_v1_docker_test_proto_rawDescGZIP() []byte {
	file_train_v1_docker_test_proto_rawDescOnce.Do(func() {
		file_train_v1_docker_test_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_train_v1_docker_test_proto_rawDesc), len(file_train_v1_docker_test_proto_rawDesc)))
	})
	return file_train_v1_docker_test_proto_rawDescData
}

var file_train_v1_docker_test_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_train_v1_docker_test_proto_goTypes = []any{
	(*StopContainerRequest)(nil),  // 0: api.train.v1.StopContainerRequest
	(*StopContainerResponse)(nil), // 1: api.train.v1.StopContainerResponse
	(*FindImageRequest)(nil),      // 2: api.train.v1.FindImageRequest
	(*FindImageResponse)(nil),     // 3: api.train.v1.FindImageResponse
}
var file_train_v1_docker_test_proto_depIdxs = []int32{
	0, // 0: api.train.v1.DockerTestService.StopContainer:input_type -> api.train.v1.StopContainerRequest
	2, // 1: api.train.v1.DockerTestService.FindImage:input_type -> api.train.v1.FindImageRequest
	1, // 2: api.train.v1.DockerTestService.StopContainer:output_type -> api.train.v1.StopContainerResponse
	3, // 3: api.train.v1.DockerTestService.FindImage:output_type -> api.train.v1.FindImageResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_train_v1_docker_test_proto_init() }
func file_train_v1_docker_test_proto_init() {
	if File_train_v1_docker_test_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_train_v1_docker_test_proto_rawDesc), len(file_train_v1_docker_test_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_train_v1_docker_test_proto_goTypes,
		DependencyIndexes: file_train_v1_docker_test_proto_depIdxs,
		MessageInfos:      file_train_v1_docker_test_proto_msgTypes,
	}.Build()
	File_train_v1_docker_test_proto = out.File
	file_train_v1_docker_test_proto_goTypes = nil
	file_train_v1_docker_test_proto_depIdxs = nil
}
