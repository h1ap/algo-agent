// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: oss/v1/oss.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 文件信息
type FileInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	ContentType   string                 `protobuf:"bytes,3,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Content       []byte                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	mi := &file_oss_v1_oss_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_oss_v1_oss_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_oss_v1_oss_proto_rawDescGZIP(), []int{0}
}

func (x *FileInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileInfo) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *FileInfo) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

// 上传临时文件请求
type TempUploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BucketName    string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	File          *FileInfo              `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TempUploadRequest) Reset() {
	*x = TempUploadRequest{}
	mi := &file_oss_v1_oss_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TempUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TempUploadRequest) ProtoMessage() {}

func (x *TempUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oss_v1_oss_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TempUploadRequest.ProtoReflect.Descriptor instead.
func (*TempUploadRequest) Descriptor() ([]byte, []int) {
	return file_oss_v1_oss_proto_rawDescGZIP(), []int{1}
}

func (x *TempUploadRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *TempUploadRequest) GetFile() *FileInfo {
	if x != nil {
		return x.File
	}
	return nil
}

// 上传临时文件响应
type TempUploadReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilePath      string                 `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TempUploadReply) Reset() {
	*x = TempUploadReply{}
	mi := &file_oss_v1_oss_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TempUploadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TempUploadReply) ProtoMessage() {}

func (x *TempUploadReply) ProtoReflect() protoreflect.Message {
	mi := &file_oss_v1_oss_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TempUploadReply.ProtoReflect.Descriptor instead.
func (*TempUploadReply) Descriptor() ([]byte, []int) {
	return file_oss_v1_oss_proto_rawDescGZIP(), []int{2}
}

func (x *TempUploadReply) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

// 上传文件请求
type UploadFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BucketName    string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	File          *FileInfo              `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	FilePath      string                 `protobuf:"bytes,3,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileRequest) Reset() {
	*x = UploadFileRequest{}
	mi := &file_oss_v1_oss_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileRequest) ProtoMessage() {}

func (x *UploadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oss_v1_oss_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileRequest.ProtoReflect.Descriptor instead.
func (*UploadFileRequest) Descriptor() ([]byte, []int) {
	return file_oss_v1_oss_proto_rawDescGZIP(), []int{3}
}

func (x *UploadFileRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *UploadFileRequest) GetFile() *FileInfo {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *UploadFileRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

// 上传文件响应
type UploadFileReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileReply) Reset() {
	*x = UploadFileReply{}
	mi := &file_oss_v1_oss_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileReply) ProtoMessage() {}

func (x *UploadFileReply) ProtoReflect() protoreflect.Message {
	mi := &file_oss_v1_oss_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileReply.ProtoReflect.Descriptor instead.
func (*UploadFileReply) Descriptor() ([]byte, []int) {
	return file_oss_v1_oss_proto_rawDescGZIP(), []int{4}
}

func (x *UploadFileReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 下载文件请求
type DownloadFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BucketName    string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	FilePath      string                 `protobuf:"bytes,2,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadFileRequest) Reset() {
	*x = DownloadFileRequest{}
	mi := &file_oss_v1_oss_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileRequest) ProtoMessage() {}

func (x *DownloadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oss_v1_oss_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileRequest.ProtoReflect.Descriptor instead.
func (*DownloadFileRequest) Descriptor() ([]byte, []int) {
	return file_oss_v1_oss_proto_rawDescGZIP(), []int{5}
}

func (x *DownloadFileRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *DownloadFileRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

// 下载文件响应
type DownloadFileReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []byte                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadFileReply) Reset() {
	*x = DownloadFileReply{}
	mi := &file_oss_v1_oss_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadFileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileReply) ProtoMessage() {}

func (x *DownloadFileReply) ProtoReflect() protoreflect.Message {
	mi := &file_oss_v1_oss_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileReply.ProtoReflect.Descriptor instead.
func (*DownloadFileReply) Descriptor() ([]byte, []int) {
	return file_oss_v1_oss_proto_rawDescGZIP(), []int{6}
}

func (x *DownloadFileReply) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

// 删除文件请求
type DeleteFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BucketName    string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	FilePath      string                 `protobuf:"bytes,2,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileRequest) Reset() {
	*x = DeleteFileRequest{}
	mi := &file_oss_v1_oss_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileRequest) ProtoMessage() {}

func (x *DeleteFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oss_v1_oss_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileRequest.ProtoReflect.Descriptor instead.
func (*DeleteFileRequest) Descriptor() ([]byte, []int) {
	return file_oss_v1_oss_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteFileRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *DeleteFileRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

// 删除文件响应
type DeleteFileReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileReply) Reset() {
	*x = DeleteFileReply{}
	mi := &file_oss_v1_oss_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileReply) ProtoMessage() {}

func (x *DeleteFileReply) ProtoReflect() protoreflect.Message {
	mi := &file_oss_v1_oss_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileReply.ProtoReflect.Descriptor instead.
func (*DeleteFileReply) Descriptor() ([]byte, []int) {
	return file_oss_v1_oss_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteFileReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 批量删除文件请求
type BatchDeleteFilesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BucketName    string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	FilePaths     []string               `protobuf:"bytes,2,rep,name=file_paths,json=filePaths,proto3" json:"file_paths,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDeleteFilesRequest) Reset() {
	*x = BatchDeleteFilesRequest{}
	mi := &file_oss_v1_oss_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeleteFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteFilesRequest) ProtoMessage() {}

func (x *BatchDeleteFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oss_v1_oss_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteFilesRequest.ProtoReflect.Descriptor instead.
func (*BatchDeleteFilesRequest) Descriptor() ([]byte, []int) {
	return file_oss_v1_oss_proto_rawDescGZIP(), []int{9}
}

func (x *BatchDeleteFilesRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *BatchDeleteFilesRequest) GetFilePaths() []string {
	if x != nil {
		return x.FilePaths
	}
	return nil
}

// 批量删除文件响应
type BatchDeleteFilesReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDeleteFilesReply) Reset() {
	*x = BatchDeleteFilesReply{}
	mi := &file_oss_v1_oss_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeleteFilesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteFilesReply) ProtoMessage() {}

func (x *BatchDeleteFilesReply) ProtoReflect() protoreflect.Message {
	mi := &file_oss_v1_oss_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteFilesReply.ProtoReflect.Descriptor instead.
func (*BatchDeleteFilesReply) Descriptor() ([]byte, []int) {
	return file_oss_v1_oss_proto_rawDescGZIP(), []int{10}
}

func (x *BatchDeleteFilesReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 列出文件请求
type ListFilesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BucketName    string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	Prefix        string                 `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFilesRequest) Reset() {
	*x = ListFilesRequest{}
	mi := &file_oss_v1_oss_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesRequest) ProtoMessage() {}

func (x *ListFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oss_v1_oss_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesRequest.ProtoReflect.Descriptor instead.
func (*ListFilesRequest) Descriptor() ([]byte, []int) {
	return file_oss_v1_oss_proto_rawDescGZIP(), []int{11}
}

func (x *ListFilesRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *ListFilesRequest) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

// 列出文件响应
type ListFilesReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilePaths     []string               `protobuf:"bytes,1,rep,name=file_paths,json=filePaths,proto3" json:"file_paths,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFilesReply) Reset() {
	*x = ListFilesReply{}
	mi := &file_oss_v1_oss_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFilesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesReply) ProtoMessage() {}

func (x *ListFilesReply) ProtoReflect() protoreflect.Message {
	mi := &file_oss_v1_oss_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesReply.ProtoReflect.Descriptor instead.
func (*ListFilesReply) Descriptor() ([]byte, []int) {
	return file_oss_v1_oss_proto_rawDescGZIP(), []int{12}
}

func (x *ListFilesReply) GetFilePaths() []string {
	if x != nil {
		return x.FilePaths
	}
	return nil
}

// 合并文件请求
type MergeFilesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BucketName    string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	SourceFiles   []string               `protobuf:"bytes,2,rep,name=source_files,json=sourceFiles,proto3" json:"source_files,omitempty"`
	TargetFile    string                 `protobuf:"bytes,3,opt,name=target_file,json=targetFile,proto3" json:"target_file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MergeFilesRequest) Reset() {
	*x = MergeFilesRequest{}
	mi := &file_oss_v1_oss_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MergeFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeFilesRequest) ProtoMessage() {}

func (x *MergeFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oss_v1_oss_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeFilesRequest.ProtoReflect.Descriptor instead.
func (*MergeFilesRequest) Descriptor() ([]byte, []int) {
	return file_oss_v1_oss_proto_rawDescGZIP(), []int{13}
}

func (x *MergeFilesRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *MergeFilesRequest) GetSourceFiles() []string {
	if x != nil {
		return x.SourceFiles
	}
	return nil
}

func (x *MergeFilesRequest) GetTargetFile() string {
	if x != nil {
		return x.TargetFile
	}
	return ""
}

// 合并文件响应
type MergeFilesReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MergeFilesReply) Reset() {
	*x = MergeFilesReply{}
	mi := &file_oss_v1_oss_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MergeFilesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeFilesReply) ProtoMessage() {}

func (x *MergeFilesReply) ProtoReflect() protoreflect.Message {
	mi := &file_oss_v1_oss_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeFilesReply.ProtoReflect.Descriptor instead.
func (*MergeFilesReply) Descriptor() ([]byte, []int) {
	return file_oss_v1_oss_proto_rawDescGZIP(), []int{14}
}

func (x *MergeFilesReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 写入字符串请求
type WriteStringRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BucketName    string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	FilePath      string                 `protobuf:"bytes,3,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteStringRequest) Reset() {
	*x = WriteStringRequest{}
	mi := &file_oss_v1_oss_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteStringRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteStringRequest) ProtoMessage() {}

func (x *WriteStringRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oss_v1_oss_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteStringRequest.ProtoReflect.Descriptor instead.
func (*WriteStringRequest) Descriptor() ([]byte, []int) {
	return file_oss_v1_oss_proto_rawDescGZIP(), []int{15}
}

func (x *WriteStringRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *WriteStringRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *WriteStringRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

// 写入字符串响应
type WriteStringReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteStringReply) Reset() {
	*x = WriteStringReply{}
	mi := &file_oss_v1_oss_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteStringReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteStringReply) ProtoMessage() {}

func (x *WriteStringReply) ProtoReflect() protoreflect.Message {
	mi := &file_oss_v1_oss_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteStringReply.ProtoReflect.Descriptor instead.
func (*WriteStringReply) Descriptor() ([]byte, []int) {
	return file_oss_v1_oss_proto_rawDescGZIP(), []int{16}
}

func (x *WriteStringReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 读取字符串请求
type ReadStringRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BucketName    string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	FilePath      string                 `protobuf:"bytes,2,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadStringRequest) Reset() {
	*x = ReadStringRequest{}
	mi := &file_oss_v1_oss_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadStringRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadStringRequest) ProtoMessage() {}

func (x *ReadStringRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oss_v1_oss_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadStringRequest.ProtoReflect.Descriptor instead.
func (*ReadStringRequest) Descriptor() ([]byte, []int) {
	return file_oss_v1_oss_proto_rawDescGZIP(), []int{17}
}

func (x *ReadStringRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *ReadStringRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

// 读取字符串响应
type ReadStringReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadStringReply) Reset() {
	*x = ReadStringReply{}
	mi := &file_oss_v1_oss_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadStringReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadStringReply) ProtoMessage() {}

func (x *ReadStringReply) ProtoReflect() protoreflect.Message {
	mi := &file_oss_v1_oss_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadStringReply.ProtoReflect.Descriptor instead.
func (*ReadStringReply) Descriptor() ([]byte, []int) {
	return file_oss_v1_oss_proto_rawDescGZIP(), []int{18}
}

func (x *ReadStringReply) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

var File_oss_v1_oss_proto protoreflect.FileDescriptor

const file_oss_v1_oss_proto_rawDesc = "" +
	"\n" +
	"\x10oss/v1/oss.proto\x12\n" +
	"api.oss.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x17validate/validate.proto\"x\n" +
	"\bFileInfo\x12\x1b\n" +
	"\x04name\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x04name\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x03R\x04size\x12!\n" +
	"\fcontent_type\x18\x03 \x01(\tR\vcontentType\x12\x18\n" +
	"\acontent\x18\x04 \x01(\fR\acontent\"q\n" +
	"\x11TempUploadRequest\x12(\n" +
	"\vbucket_name\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"bucketName\x122\n" +
	"\x04file\x18\x02 \x01(\v2\x14.api.oss.v1.FileInfoB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x04file\".\n" +
	"\x0fTempUploadReply\x12\x1b\n" +
	"\tfile_path\x18\x01 \x01(\tR\bfilePath\"\x97\x01\n" +
	"\x11UploadFileRequest\x12(\n" +
	"\vbucket_name\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"bucketName\x122\n" +
	"\x04file\x18\x02 \x01(\v2\x14.api.oss.v1.FileInfoB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x04file\x12$\n" +
	"\tfile_path\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\bfilePath\"+\n" +
	"\x0fUploadFileReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"e\n" +
	"\x13DownloadFileRequest\x12(\n" +
	"\vbucket_name\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"bucketName\x12$\n" +
	"\tfile_path\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\bfilePath\"-\n" +
	"\x11DownloadFileReply\x12\x18\n" +
	"\acontent\x18\x01 \x01(\fR\acontent\"c\n" +
	"\x11DeleteFileRequest\x12(\n" +
	"\vbucket_name\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"bucketName\x12$\n" +
	"\tfile_path\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\bfilePath\"+\n" +
	"\x0fDeleteFileReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"l\n" +
	"\x17BatchDeleteFilesRequest\x12(\n" +
	"\vbucket_name\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"bucketName\x12'\n" +
	"\n" +
	"file_paths\x18\x02 \x03(\tB\b\xfaB\x05\x92\x01\x02\b\x01R\tfilePaths\"1\n" +
	"\x15BatchDeleteFilesReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"T\n" +
	"\x10ListFilesRequest\x12(\n" +
	"\vbucket_name\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"bucketName\x12\x16\n" +
	"\x06prefix\x18\x02 \x01(\tR\x06prefix\"/\n" +
	"\x0eListFilesReply\x12\x1d\n" +
	"\n" +
	"file_paths\x18\x01 \x03(\tR\tfilePaths\"\x94\x01\n" +
	"\x11MergeFilesRequest\x12(\n" +
	"\vbucket_name\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"bucketName\x12+\n" +
	"\fsource_files\x18\x02 \x03(\tB\b\xfaB\x05\x92\x01\x02\b\x01R\vsourceFiles\x12(\n" +
	"\vtarget_file\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"targetFile\"+\n" +
	"\x0fMergeFilesReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"~\n" +
	"\x12WriteStringRequest\x12(\n" +
	"\vbucket_name\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"bucketName\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12$\n" +
	"\tfile_path\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\bfilePath\",\n" +
	"\x10WriteStringReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"c\n" +
	"\x11ReadStringRequest\x12(\n" +
	"\vbucket_name\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"bucketName\x12$\n" +
	"\tfile_path\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\bfilePath\"+\n" +
	"\x0fReadStringReply\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent2\x90\b\n" +
	"\n" +
	"OSSService\x12h\n" +
	"\n" +
	"TempUpload\x12\x1d.api.oss.v1.TempUploadRequest\x1a\x1b.api.oss.v1.TempUploadReply\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/v1/oss/temp/upload\x12c\n" +
	"\n" +
	"UploadFile\x12\x1d.api.oss.v1.UploadFileRequest\x1a\x1b.api.oss.v1.UploadFileReply\"\x19\x82\xd3\xe4\x93\x02\x13:\x01*\"\x0e/v1/oss/upload\x12\x82\x01\n" +
	"\fDownloadFile\x12\x1f.api.oss.v1.DownloadFileRequest\x1a\x1d.api.oss.v1.DownloadFileReply\"2\x82\xd3\xe4\x93\x02,\x12*/v1/oss/download/{bucket_name}/{file_path}\x12x\n" +
	"\n" +
	"DeleteFile\x12\x1d.api.oss.v1.DeleteFileRequest\x1a\x1b.api.oss.v1.DeleteFileReply\".\x82\xd3\xe4\x93\x02(*&/v1/oss/file/{bucket_name}/{file_path}\x12{\n" +
	"\x10BatchDeleteFiles\x12#.api.oss.v1.BatchDeleteFilesRequest\x1a!.api.oss.v1.BatchDeleteFilesReply\"\x1f\x82\xd3\xe4\x93\x02\x19:\x01*\"\x14/v1/oss/batch/delete\x12r\n" +
	"\tListFiles\x12\x1c.api.oss.v1.ListFilesRequest\x1a\x1a.api.oss.v1.ListFilesReply\"+\x82\xd3\xe4\x93\x02%\x12#/v1/oss/list/{bucket_name}/{prefix}\x12b\n" +
	"\n" +
	"MergeFiles\x12\x1d.api.oss.v1.MergeFilesRequest\x1a\x1b.api.oss.v1.MergeFilesReply\"\x18\x82\xd3\xe4\x93\x02\x12:\x01*\"\r/v1/oss/merge\x12e\n" +
	"\vWriteString\x12\x1e.api.oss.v1.WriteStringRequest\x1a\x1c.api.oss.v1.WriteStringReply\"\x18\x82\xd3\xe4\x93\x02\x12:\x01*\"\r/v1/oss/write\x12x\n" +
	"\n" +
	"ReadString\x12\x1d.api.oss.v1.ReadStringRequest\x1a\x1b.api.oss.v1.ReadStringReply\".\x82\xd3\xe4\x93\x02(\x12&/v1/oss/read/{bucket_name}/{file_path}B(\n" +
	"\n" +
	"api.oss.v1P\x01Z\x18algo-agent/api/oss/v1;v1b\x06proto3"

var (
	file_oss_v1_oss_proto_rawDescOnce sync.Once
	file_oss_v1_oss_proto_rawDescData []byte
)

func file_oss_v1_oss_proto_rawDescGZIP() []byte {
	file_oss_v1_oss_proto_rawDescOnce.Do(func() {
		file_oss_v1_oss_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_oss_v1_oss_proto_rawDesc), len(file_oss_v1_oss_proto_rawDesc)))
	})
	return file_oss_v1_oss_proto_rawDescData
}

var file_oss_v1_oss_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_oss_v1_oss_proto_goTypes = []any{
	(*FileInfo)(nil),                // 0: api.oss.v1.FileInfo
	(*TempUploadRequest)(nil),       // 1: api.oss.v1.TempUploadRequest
	(*TempUploadReply)(nil),         // 2: api.oss.v1.TempUploadReply
	(*UploadFileRequest)(nil),       // 3: api.oss.v1.UploadFileRequest
	(*UploadFileReply)(nil),         // 4: api.oss.v1.UploadFileReply
	(*DownloadFileRequest)(nil),     // 5: api.oss.v1.DownloadFileRequest
	(*DownloadFileReply)(nil),       // 6: api.oss.v1.DownloadFileReply
	(*DeleteFileRequest)(nil),       // 7: api.oss.v1.DeleteFileRequest
	(*DeleteFileReply)(nil),         // 8: api.oss.v1.DeleteFileReply
	(*BatchDeleteFilesRequest)(nil), // 9: api.oss.v1.BatchDeleteFilesRequest
	(*BatchDeleteFilesReply)(nil),   // 10: api.oss.v1.BatchDeleteFilesReply
	(*ListFilesRequest)(nil),        // 11: api.oss.v1.ListFilesRequest
	(*ListFilesReply)(nil),          // 12: api.oss.v1.ListFilesReply
	(*MergeFilesRequest)(nil),       // 13: api.oss.v1.MergeFilesRequest
	(*MergeFilesReply)(nil),         // 14: api.oss.v1.MergeFilesReply
	(*WriteStringRequest)(nil),      // 15: api.oss.v1.WriteStringRequest
	(*WriteStringReply)(nil),        // 16: api.oss.v1.WriteStringReply
	(*ReadStringRequest)(nil),       // 17: api.oss.v1.ReadStringRequest
	(*ReadStringReply)(nil),         // 18: api.oss.v1.ReadStringReply
}
var file_oss_v1_oss_proto_depIdxs = []int32{
	0,  // 0: api.oss.v1.TempUploadRequest.file:type_name -> api.oss.v1.FileInfo
	0,  // 1: api.oss.v1.UploadFileRequest.file:type_name -> api.oss.v1.FileInfo
	1,  // 2: api.oss.v1.OSSService.TempUpload:input_type -> api.oss.v1.TempUploadRequest
	3,  // 3: api.oss.v1.OSSService.UploadFile:input_type -> api.oss.v1.UploadFileRequest
	5,  // 4: api.oss.v1.OSSService.DownloadFile:input_type -> api.oss.v1.DownloadFileRequest
	7,  // 5: api.oss.v1.OSSService.DeleteFile:input_type -> api.oss.v1.DeleteFileRequest
	9,  // 6: api.oss.v1.OSSService.BatchDeleteFiles:input_type -> api.oss.v1.BatchDeleteFilesRequest
	11, // 7: api.oss.v1.OSSService.ListFiles:input_type -> api.oss.v1.ListFilesRequest
	13, // 8: api.oss.v1.OSSService.MergeFiles:input_type -> api.oss.v1.MergeFilesRequest
	15, // 9: api.oss.v1.OSSService.WriteString:input_type -> api.oss.v1.WriteStringRequest
	17, // 10: api.oss.v1.OSSService.ReadString:input_type -> api.oss.v1.ReadStringRequest
	2,  // 11: api.oss.v1.OSSService.TempUpload:output_type -> api.oss.v1.TempUploadReply
	4,  // 12: api.oss.v1.OSSService.UploadFile:output_type -> api.oss.v1.UploadFileReply
	6,  // 13: api.oss.v1.OSSService.DownloadFile:output_type -> api.oss.v1.DownloadFileReply
	8,  // 14: api.oss.v1.OSSService.DeleteFile:output_type -> api.oss.v1.DeleteFileReply
	10, // 15: api.oss.v1.OSSService.BatchDeleteFiles:output_type -> api.oss.v1.BatchDeleteFilesReply
	12, // 16: api.oss.v1.OSSService.ListFiles:output_type -> api.oss.v1.ListFilesReply
	14, // 17: api.oss.v1.OSSService.MergeFiles:output_type -> api.oss.v1.MergeFilesReply
	16, // 18: api.oss.v1.OSSService.WriteString:output_type -> api.oss.v1.WriteStringReply
	18, // 19: api.oss.v1.OSSService.ReadString:output_type -> api.oss.v1.ReadStringReply
	11, // [11:20] is the sub-list for method output_type
	2,  // [2:11] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_oss_v1_oss_proto_init() }
func file_oss_v1_oss_proto_init() {
	if File_oss_v1_oss_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_oss_v1_oss_proto_rawDesc), len(file_oss_v1_oss_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_oss_v1_oss_proto_goTypes,
		DependencyIndexes: file_oss_v1_oss_proto_depIdxs,
		MessageInfos:      file_oss_v1_oss_proto_msgTypes,
	}.Build()
	File_oss_v1_oss_proto = out.File
	file_oss_v1_oss_proto_goTypes = nil
	file_oss_v1_oss_proto_depIdxs = nil
}
