syntax = "proto3";
package kratos.api;

option go_package = "algo-agent/internal/conf;conf";

import "google/protobuf/duration.proto";

message Bootstrap {
  Server server = 1;
  Data data = 2;
}

message Server {
  message HTTP {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  message GRPC {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  HTTP http = 1;
  GRPC grpc = 2;
}

message Data {
  message Database {
    string driver = 1;
    string source = 2;
  }
  message Redis {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration read_timeout = 3;
    google.protobuf.Duration write_timeout = 4;
  }
  message RabbitMQ {
    string host = 1;
    int32 port = 2;
    string username = 3;
    string password = 4;
    string vhost = 5;
    string group = 6;
    string default_exchange_name = 7;
    string default_routing_key = 8;
    string service_queue_prefix = 9;
    string node_queue_prefix = 10;
    string node_name = 11;
    message Listener {
      int32 retry_max_attempts = 1;
      google.protobuf.Duration retry_initial_interval = 2;
      double retry_multiplier = 3;
      google.protobuf.Duration retry_max_interval = 4;
    }
    Listener listener = 12;
  }
  message Oss {
    string endpoint = 1;
    string access_key = 2;
    string secret_key = 3;
  }
  message Docker {
    string host = 1;
    uint32 max_connections = 2;
    google.protobuf.Duration connection_timeout = 3;
    google.protobuf.Duration response_timeout = 4;
  }
  message Node {
    string node_name = 1;
    string node_host = 2;
    string docker_host = 3;
  }
  Database database = 1;
  Redis redis = 2;
  RabbitMQ rabbitmq = 3;
  Oss oss = 4;
  Docker docker = 5;
  Node node = 6;
  string mapping_file_path = 7;
}
