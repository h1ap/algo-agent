# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /deploy/v1:
        post:
            tags:
                - DeployService
            description: 部署服务
            operationId: DeployService_Deploy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.deploy.v1.DeployRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.deploy.v1.DeployReply'
    /deploy/v1/destroy:
        delete:
            tags:
                - DeployService
            description: 销毁服务
            operationId: DeployService_Destroy
            parameters:
                - name: serviceId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.deploy.v1.DestroyReply'
    /docker/findImage:
        get:
            tags:
                - DockerTestService
            description: 查找镜像
            operationId: DockerTestService_FindImage
            parameters:
                - name: name
                  in: query
                  description: 镜像名称
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.train.v1.FindImageResponse'
    /docker/stop:
        get:
            tags:
                - DockerTestService
            description: 停止容器
            operationId: DockerTestService_StopContainer
            parameters:
                - name: name
                  in: query
                  description: 容器名称
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.train.v1.StopContainerResponse'
    /v1/docker/container/name/{containerName}/stop:
        post:
            tags:
                - DockerService
            description: 通过名称停止容器
            operationId: DockerService_StopContainerByName
            parameters:
                - name: containerName
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.docker.v1.StopContainerByNameRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.docker.v1.StopContainerByNameReply'
    /v1/docker/container/run:
        post:
            tags:
                - DockerService
            description: 通过镜像和自定义参数运行一个容器
            operationId: DockerService_RunContainer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.docker.v1.RunContainerRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.docker.v1.RunContainerReply'
    /v1/docker/container/run_start:
        post:
            tags:
                - DockerService
            description: 运行并启动容器，返回容器信息
            operationId: DockerService_RunAndStartContainer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.docker.v1.RunAndStartContainerRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.docker.v1.RunAndStartContainerReply'
    /v1/docker/container/run_start_port:
        post:
            tags:
                - DockerService
            description: 运行并启动带端口映射的容器
            operationId: DockerService_RunAndStartContainerWithPort
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.docker.v1.RunAndStartContainerWithPortRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.docker.v1.RunAndStartContainerWithPortReply'
    /v1/docker/container/{containerId}/logs:
        get:
            tags:
                - DockerService
            description: 获取指定容器的最后若干行日志
            operationId: DockerService_GetContainerLastLogs
            parameters:
                - name: containerId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: tail
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.docker.v1.GetContainerLastLogsReply'
    /v1/docker/container/{containerId}/stop:
        post:
            tags:
                - DockerService
            description: 停止容器
            operationId: DockerService_StopContainer
            parameters:
                - name: containerId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.docker.v1.StopContainerReply'
    /v1/docker/container/{containerId}/stop_time:
        get:
            tags:
                - DockerService
            description: 获取容器的停止时间戳
            operationId: DockerService_GetContainerStopTime
            parameters:
                - name: containerId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.docker.v1.GetContainerStopTimeReply'
    /v1/docker/container/{containerName}:
        get:
            tags:
                - DockerService
            description: 根据容器名查找容器
            operationId: DockerService_FindContainerByName
            parameters:
                - name: containerName
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.docker.v1.FindContainerByNameReply'
    /v1/docker/image/import:
        post:
            tags:
                - DockerService
            description: 导入并标记镜像
            operationId: DockerService_ImportAndTagImage
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.docker.v1.ImportAndTagImageRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.docker.v1.ImportAndTagImageReply'
    /v1/docker/image/{imageName}:
        get:
            tags:
                - DockerService
            description: 查找指定名称的镜像
            operationId: DockerService_FindImageByName
            parameters:
                - name: imageName
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.docker.v1.FindImageByNameReply'
    /v1/mq/queue/send:
        post:
            tags:
                - RabbitMQService
            description: 发送消息到特定队列
            operationId: RabbitMQService_SendToQueue
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.rabbitmq.v1.SendToQueueRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.rabbitmq.v1.SendToQueueReply'
    /v1/mq/send:
        post:
            tags:
                - RabbitMQService
            description: 发送消息到特定交换机和路由键
            operationId: RabbitMQService_SendMessage
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.rabbitmq.v1.SendMessageRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.rabbitmq.v1.SendMessageReply'
    /v1/mq/service/send:
        post:
            tags:
                - RabbitMQService
            description: 发送消息到特定服务
            operationId: RabbitMQService_SendToService
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.rabbitmq.v1.SendToServiceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.rabbitmq.v1.SendToServiceReply'
    /v1/oss/batch/delete:
        post:
            tags:
                - OSSService
            description: 批量删除文件
            operationId: OSSService_BatchDeleteFiles
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.oss.v1.BatchDeleteFilesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.oss.v1.BatchDeleteFilesReply'
    /v1/oss/download/{bucketName}/{filePath}:
        get:
            tags:
                - OSSService
            description: 下载文件
            operationId: OSSService_DownloadFile
            parameters:
                - name: bucketName
                  in: path
                  required: true
                  schema:
                    type: string
                - name: filePath
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.oss.v1.DownloadFileReply'
    /v1/oss/file/{bucketName}/{filePath}:
        delete:
            tags:
                - OSSService
            description: 删除文件
            operationId: OSSService_DeleteFile
            parameters:
                - name: bucketName
                  in: path
                  required: true
                  schema:
                    type: string
                - name: filePath
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.oss.v1.DeleteFileReply'
    /v1/oss/list/{bucketName}/{prefix}:
        get:
            tags:
                - OSSService
            description: 列出文件
            operationId: OSSService_ListFiles
            parameters:
                - name: bucketName
                  in: path
                  required: true
                  schema:
                    type: string
                - name: prefix
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.oss.v1.ListFilesReply'
    /v1/oss/merge:
        post:
            tags:
                - OSSService
            description: 合并文件
            operationId: OSSService_MergeFiles
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.oss.v1.MergeFilesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.oss.v1.MergeFilesReply'
    /v1/oss/read/{bucketName}/{filePath}:
        get:
            tags:
                - OSSService
            description: 读取字符串
            operationId: OSSService_ReadString
            parameters:
                - name: bucketName
                  in: path
                  required: true
                  schema:
                    type: string
                - name: filePath
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.oss.v1.ReadStringReply'
    /v1/oss/temp/upload:
        post:
            tags:
                - OSSService
            description: 上传临时文件
            operationId: OSSService_TempUpload
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.oss.v1.TempUploadRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.oss.v1.TempUploadReply'
    /v1/oss/upload:
        post:
            tags:
                - OSSService
            description: 上传文件
            operationId: OSSService_UploadFile
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.oss.v1.UploadFileRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.oss.v1.UploadFileReply'
    /v1/oss/write:
        post:
            tags:
                - OSSService
            description: 写入字符串
            operationId: OSSService_WriteString
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.oss.v1.WriteStringRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.oss.v1.WriteStringReply'
components:
    schemas:
        api.deploy.v1.DeployReply:
            type: object
            properties:
                serviceId:
                    type: string
                    description: 推理服务 ID
                serviceStatus:
                    type: integer
                    description: 推理服务状态
                    format: int32
                remark:
                    type: string
                    description: 备注
            description: 部署响应消息
        api.deploy.v1.DeployRequest:
            type: object
            properties:
                serviceId:
                    type: string
                    description: 推理服务ID
                op:
                    type: integer
                    description: 推理服务操作
                    format: int32
                algorithmScriptBucket:
                    type: string
                    description: 算法脚本所在minio存储桶
                algorithmScriptPath:
                    type: string
                    description: 算法脚本所在minio的存储地址
                modelBucket:
                    type: string
                    description: 推理权重模型所在bucket
                modelPath:
                    type: string
                    description: 推理权重模型所在url地址
                inferImageName:
                    type: string
                    description: 算法推理用docker image名称
                inferImageBucket:
                    type: string
                    description: 推理用镜像bucket名称
                inferImagePath:
                    type: string
                    description: 推理用docker image在minio的存储地址
                datasetLabel:
                    type: string
                    description: 标注标签
                servicePort:
                    type: integer
                    description: 推理服务端口
                    format: int32
                args:
                    type: array
                    items:
                        type: string
                    description: 推理服务启动参数
            description: 部署请求消息
        api.deploy.v1.DestroyReply:
            type: object
            properties:
                message:
                    type: string
            description: 销毁响应消息
        api.docker.v1.ContainerInfo:
            type: object
            properties:
                containerId:
                    type: string
                containerName:
                    type: string
            description: 容器信息
        api.docker.v1.FindContainerByNameReply:
            type: object
            properties:
                container:
                    $ref: '#/components/schemas/api.docker.v1.ContainerInfo'
            description: 查找容器响应
        api.docker.v1.FindImageByNameReply:
            type: object
            properties:
                exists:
                    type: boolean
            description: 查找镜像响应
        api.docker.v1.GetContainerLastLogsReply:
            type: object
            properties:
                logs:
                    type: string
            description: 获取容器日志响应
        api.docker.v1.GetContainerStopTimeReply:
            type: object
            properties:
                stopTime:
                    type: string
            description: 获取容器停止时间响应
        api.docker.v1.ImportAndTagImageReply:
            type: object
            properties:
                success:
                    type: boolean
            description: 导入并标记镜像响应
        api.docker.v1.ImportAndTagImageRequest:
            type: object
            properties:
                tarFilePath:
                    type: string
                fullImageName:
                    type: string
            description: 导入并标记镜像请求
        api.docker.v1.RunAndStartContainerReply:
            type: object
            properties:
                container:
                    $ref: '#/components/schemas/api.docker.v1.ContainerInfo'
            description: 运行并启动容器响应
        api.docker.v1.RunAndStartContainerRequest:
            type: object
            properties:
                imageName:
                    type: string
                hostPath:
                    type: string
                containerPath:
                    type: string
                scriptPath:
                    type: string
                args:
                    type: array
                    items:
                        type: string
            description: 运行并启动容器请求
        api.docker.v1.RunAndStartContainerWithPortReply:
            type: object
            properties:
                containerId:
                    type: string
            description: 运行并启动带端口映射的容器响应
        api.docker.v1.RunAndStartContainerWithPortRequest:
            type: object
            properties:
                imageName:
                    type: string
                hostPath:
                    type: string
                containerPath:
                    type: string
                command:
                    type: string
                args:
                    type: array
                    items:
                        type: string
                hostPort:
                    type: integer
                    format: int32
            description: 运行并启动带端口映射的容器请求
        api.docker.v1.RunContainerReply:
            type: object
            properties:
                containerId:
                    type: string
            description: 运行容器响应
        api.docker.v1.RunContainerRequest:
            type: object
            properties:
                imageName:
                    type: string
                customArgs:
                    type: array
                    items:
                        type: string
            description: 运行容器请求
        api.docker.v1.StopContainerByNameReply:
            type: object
            properties:
                success:
                    type: boolean
            description: 通过名称停止容器响应
        api.docker.v1.StopContainerByNameRequest:
            type: object
            properties:
                containerName:
                    type: string
                remove:
                    type: boolean
            description: 通过名称停止容器请求
        api.docker.v1.StopContainerReply:
            type: object
            properties:
                success:
                    type: boolean
            description: 停止容器响应
        api.oss.v1.BatchDeleteFilesReply:
            type: object
            properties:
                success:
                    type: boolean
            description: 批量删除文件响应
        api.oss.v1.BatchDeleteFilesRequest:
            type: object
            properties:
                bucketName:
                    type: string
                filePaths:
                    type: array
                    items:
                        type: string
            description: 批量删除文件请求
        api.oss.v1.DeleteFileReply:
            type: object
            properties:
                success:
                    type: boolean
            description: 删除文件响应
        api.oss.v1.DownloadFileReply:
            type: object
            properties:
                content:
                    type: string
                    format: bytes
            description: 下载文件响应
        api.oss.v1.FileInfo:
            type: object
            properties:
                name:
                    type: string
                size:
                    type: string
                contentType:
                    type: string
                content:
                    type: string
                    format: bytes
            description: 文件信息
        api.oss.v1.ListFilesReply:
            type: object
            properties:
                filePaths:
                    type: array
                    items:
                        type: string
            description: 列出文件响应
        api.oss.v1.MergeFilesReply:
            type: object
            properties:
                success:
                    type: boolean
            description: 合并文件响应
        api.oss.v1.MergeFilesRequest:
            type: object
            properties:
                bucketName:
                    type: string
                sourceFiles:
                    type: array
                    items:
                        type: string
                targetFile:
                    type: string
            description: 合并文件请求
        api.oss.v1.ReadStringReply:
            type: object
            properties:
                content:
                    type: string
            description: 读取字符串响应
        api.oss.v1.TempUploadReply:
            type: object
            properties:
                filePath:
                    type: string
            description: 上传临时文件响应
        api.oss.v1.TempUploadRequest:
            type: object
            properties:
                bucketName:
                    type: string
                file:
                    $ref: '#/components/schemas/api.oss.v1.FileInfo'
            description: 上传临时文件请求
        api.oss.v1.UploadFileReply:
            type: object
            properties:
                success:
                    type: boolean
            description: 上传文件响应
        api.oss.v1.UploadFileRequest:
            type: object
            properties:
                bucketName:
                    type: string
                file:
                    $ref: '#/components/schemas/api.oss.v1.FileInfo'
                filePath:
                    type: string
            description: 上传文件请求
        api.oss.v1.WriteStringReply:
            type: object
            properties:
                success:
                    type: boolean
            description: 写入字符串响应
        api.oss.v1.WriteStringRequest:
            type: object
            properties:
                bucketName:
                    type: string
                content:
                    type: string
                filePath:
                    type: string
            description: 写入字符串请求
        api.rabbitmq.v1.SendMessageReply:
            type: object
            properties:
                success:
                    type: boolean
            description: 发送消息响应
        api.rabbitmq.v1.SendMessageRequest:
            type: object
            properties:
                exchangeName:
                    type: string
                routingKey:
                    type: string
                message:
                    type: string
            description: 发送消息请求
        api.rabbitmq.v1.SendToQueueReply:
            type: object
            properties:
                success:
                    type: boolean
            description: 发送到队列响应
        api.rabbitmq.v1.SendToQueueRequest:
            type: object
            properties:
                queueName:
                    type: string
                message:
                    type: string
            description: 发送到队列请求
        api.rabbitmq.v1.SendToServiceReply:
            type: object
            properties:
                success:
                    type: boolean
            description: 发送到服务响应
        api.rabbitmq.v1.SendToServiceRequest:
            type: object
            properties:
                service:
                    type: string
                message:
                    type: string
            description: 发送到服务请求
        api.train.v1.FindImageResponse:
            type: object
            properties:
                message:
                    type: string
                    description: 操作结果消息
                imageId:
                    type: string
                    description: 镜像ID，如果找到
                success:
                    type: boolean
                    description: 操作是否成功
            description: 查找镜像响应
        api.train.v1.StopContainerResponse:
            type: object
            properties:
                message:
                    type: string
                    description: 操作结果消息
                containerId:
                    type: string
                    description: 容器ID，如果找到
                success:
                    type: boolean
                    description: 操作是否成功
            description: 停止容器响应
tags:
    - name: DeployService
      description: 部署服务接口定义
    - name: DockerService
      description: Docker服务接口定义
    - name: DockerTestService
      description: Docker测试服务定义
    - name: OSSService
      description: OSS服务接口定义
    - name: RabbitMQService
      description: RabbitMQ服务接口定义
